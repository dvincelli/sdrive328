Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
                              SDrive.o (__umulhisi3)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
                              SDrive.o (__muluhisi3)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
                              SDrive.o (__mulsi3)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
                              SDrive.o (__udivmodqi4)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                              SDrive.o (__udivmodhi4)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
                              SDrive.o (__udivmodsi4)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                              SDrive.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
                              SDrive.o (__eerd_byte_m8)

Allocating common symbols
Common symbol       size              file

last_dir_start_cluster
                    0x2               fat.o
GS                  0xd               SDrive.o
mmc_sector_buffer   0x200             SDrive.o
n_actual_mmc_sector
                    0x4               SDrive.o
atari_sector_buffer
                    0x100             SDrive.o
n_actual_mmc_sector_needswrite
                    0x1               SDrive.o
FileInfo            0x15              SDrive.o
last_key            0x1               SDrive.o
last_dir_valid      0x1               fat.o
debug_endofvariables
                    0x4               fat.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
LOAD SDrive.o
LOAD spi.o
LOAD mmc.o
LOAD fat.o
LOAD delay100us.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1e88
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000026       0x80 SDrive.o
 *(.progmem*)
                0x00000000000000a6                . = ALIGN (0x2)
                0x00000000000000a6                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000a6        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000a6                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000a6                __ctors_start = .
 *(.ctors)
                0x00000000000000a6                __ctors_end = .
                0x00000000000000a6                __dtors_start = .
 *(.dtors)
                0x00000000000000a6                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000a6        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x00000000000000a6                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000a6        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000b2       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000c2        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000c6        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x00000000000000c6                __vector_1
                0x00000000000000c6                __vector_12
                0x00000000000000c6                __bad_interrupt
                0x00000000000000c6                __vector_6
                0x00000000000000c6                __vector_3
                0x00000000000000c6                __vector_11
                0x00000000000000c6                __vector_13
                0x00000000000000c6                __vector_17
                0x00000000000000c6                __vector_7
                0x00000000000000c6                __vector_5
                0x00000000000000c6                __vector_4
                0x00000000000000c6                __vector_9
                0x00000000000000c6                __vector_2
                0x00000000000000c6                __vector_15
                0x00000000000000c6                __vector_8
                0x00000000000000c6                __vector_14
                0x00000000000000c6                __vector_10
                0x00000000000000c6                __vector_16
                0x00000000000000c6                __vector_18
 .text          0x00000000000000c8      0x4c0 SDrive.o
                0x00000000000000c8                get_checksum
                0x00000000000000e6                USART_Init
                0x0000000000000104                USART_Transmit_Byte
                0x000000000000010c                USART_Receive_Byte
                0x0000000000000114                USART_Send_Buffer
                0x000000000000013a                USART_Get_Buffer_And_Check
                0x0000000000000186                USART_Get_buffer_and_check_and_send_ACK_or_NACK
                0x00000000000001b4                USART_Send_cmpl_and_atari_sector_buffer_and_check_sum
                0x00000000000001d8                mmcWriteCached
                0x000000000000021c                mmcWriteCachedFlush
                0x000000000000022c                mmcReadCached
                0x0000000000000286                getClusterN
                0x00000000000002ee                faccess_offset
                0x0000000000000524                set_display
                0x000000000000054c                GetvDiskPtr
                0x000000000000055a                Clear_atari_sector_buffer
                0x000000000000056c                Clear_atari_sector_buffer_256
                0x0000000000000572                PutDecimalNumberToAtariSectorBuffer
 .text          0x0000000000000588       0x32 spi.o
                0x0000000000000588                spiInit
                0x00000000000005a4                spiSendByte
                0x00000000000005ac                spiTransferByte
                0x00000000000005b6                spiTransferFF
 .text          0x00000000000005ba      0x198 mmc.o
                0x00000000000005ba                mmcInit
                0x00000000000005c2                mmcCommand
                0x0000000000000620                mmcSendCommand
                0x0000000000000628                mmcReset
                0x00000000000006ba                mmcRead
                0x00000000000006fe                mmcWrite
 .text          0x0000000000000752      0x55c fat.o
                0x0000000000000752                fatClustToSect
                0x00000000000007a8                fatInit
                0x00000000000008c4                nextCluster
                0x0000000000000926                fatGetDirEntry
 .text          0x0000000000000cae       0x22 delay100us.o
                0x0000000000000cae                Delay100us
                0x0000000000000cb2                Delay200us
                0x0000000000000cb6                Delay800us
                0x0000000000000cba                Delay1000us
                0x0000000000000cbe                Delay100usX
 .text          0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
 .text          0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
 .text          0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
 .text          0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text          0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
                0x0000000000000cd0                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000cd0     0x10d6 SDrive.o
                0x0000000000000cd0                main
 .text.libgcc.mul
                0x0000000000001da6       0x18 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
                0x0000000000001da6                __umulhisi3
 .text.libgcc.div
                0x0000000000001dbe        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000001dbe        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000001dbe        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000001dbe        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000001dbe        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x0000000000001dbe        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.mul
                0x0000000000001dbe       0x14 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
                0x0000000000001dbe                __muluhisi3
 .text.libgcc.div
                0x0000000000001dd2        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
 .text.libgcc   0x0000000000001dd2        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
 .text.libgcc.prologue
                0x0000000000001dd2        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
 .text.libgcc.builtins
                0x0000000000001dd2        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
 .text.libgcc.fmul
                0x0000000000001dd2        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
 .text.libgcc.fixed
                0x0000000000001dd2        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
 .text.libgcc.mul
                0x0000000000001dd2       0x1e /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
                0x0000000000001dd2                __mulsi3
 .text.libgcc.div
                0x0000000000001df0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
 .text.libgcc   0x0000000000001df0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
 .text.libgcc.prologue
                0x0000000000001df0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
 .text.libgcc.builtins
                0x0000000000001df0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
 .text.libgcc.fmul
                0x0000000000001df0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
 .text.libgcc.fixed
                0x0000000000001df0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
 .text.libgcc.mul
                0x0000000000001df0        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x0000000000001df0       0x18 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
                0x0000000000001df0                __udivmodqi4
 .text.libgcc   0x0000000000001e08        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x0000000000001e08        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x0000000000001e08        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x0000000000001e08        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x0000000000001e08        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x0000000000001e08        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000001e08       0x28 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000001e08                __udivmodhi4
 .text.libgcc   0x0000000000001e30        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000001e30        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000001e30        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000001e30        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000001e30        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000001e30        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000001e30       0x44 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
                0x0000000000001e30                __udivmodsi4
 .text.libgcc   0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000001e74        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000001e74       0x10 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
                0x0000000000001e74                __eerd_byte_m8
                0x0000000000001e84                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000001e84        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                0x0000000000001e84                exit
                0x0000000000001e84                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000001e84        0x4 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000001e88                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000001e88
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 SDrive.o
 .data          0x0000000000800060        0x0 spi.o
 .data          0x0000000000800060        0x0 mmc.o
 .data          0x0000000000800060        0x0 fat.o
 .data          0x0000000000800060        0x0 delay100us.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060      0x384
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800060       0x4b SDrive.o
 .bss           0x00000000008000ab        0x0 spi.o
 .bss           0x00000000008000ab        0x0 mmc.o
 .bss           0x00000000008000ab        0xa fat.o
                0x00000000008000ab                last_dir_index
                0x00000000008000ac                last_dir_cluster
                0x00000000008000ae                last_dir_sector_count
                0x00000000008000af                last_dir_sector
                0x00000000008000b3                last_dir_entry
 .bss           0x00000000008000b5        0x0 delay100us.o
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_umulhisi3.o)
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_muluhisi3.o)
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_mulsi3.o)
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00000000008000b5        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000b5      0x328 SDrive.o
                0x00000000008000b5                GS
                0x00000000008000c2                mmc_sector_buffer
                0x00000000008002c2                n_actual_mmc_sector
                0x00000000008002c6                atari_sector_buffer
                0x00000000008003c6                n_actual_mmc_sector_needswrite
                0x00000000008003c7                FileInfo
                0x00000000008003dc                last_key
 COMMON         0x00000000008003dd        0x7 fat.o
                0x00000000008003dd                last_dir_start_cluster
                0x00000000008003df                last_dir_valid
                0x00000000008003e0                debug_endofvariables
                0x00000000008003e4                PROVIDE (__bss_end, .)
                0x0000000000001e88                __data_load_start = LOADADDR (.data)
                0x0000000000001e88                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008003e4        0x0
                0x00000000008003e4                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008003e4                PROVIDE (__noinit_end, .)
                0x00000000008003e4                _end = .
                0x00000000008003e4                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000      0x149
 *(.eeprom*)
 .eeprom        0x0000000000810000      0x149 SDrive.o
                0x0000000000810000                system_percomtable
                0x0000000000810060                system_fastsio_pokeydiv_default
                0x0000000000810061                system_atr_name
                0x000000000081006d                system_info
                0x0000000000810096                boot_xex_loader
                0x0000000000810149                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x75c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc       0x90 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(eerd_byte_atmega8.o)
                                         0x9c (size before relaxing)

.stabstr        0x0000000000000000       0x83
 *(.stabstr)
 .stabstr       0x0000000000000000       0x83 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 SDrive.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 spi.o
 .comment       0x0000000000000000       0x12 mmc.o
 .comment       0x0000000000000000       0x12 fat.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x90
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x30 SDrive.o
 .debug_aranges
                0x0000000000000030       0x20 spi.o
 .debug_aranges
                0x0000000000000050       0x20 mmc.o
 .debug_aranges
                0x0000000000000070       0x20 fat.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x1d0
 *(.debug_info)
 .debug_info    0x0000000000000000       0x71 SDrive.o
 .debug_info    0x0000000000000071       0x75 spi.o
 .debug_info    0x00000000000000e6       0x75 mmc.o
 .debug_info    0x000000000000015b       0x75 fat.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000       0x4e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x12 SDrive.o
 .debug_abbrev  0x0000000000000012       0x14 spi.o
 .debug_abbrev  0x0000000000000026       0x14 mmc.o
 .debug_abbrev  0x000000000000003a       0x14 fat.o

.debug_line     0x0000000000000000      0xe48
 *(.debug_line)
 .debug_line    0x0000000000000000      0xa6a SDrive.o
 .debug_line    0x0000000000000a6a       0x5a spi.o
 .debug_line    0x0000000000000ac4      0x104 mmc.o
 .debug_line    0x0000000000000bc8      0x280 fat.o

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x28
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x28 SDrive.o

.debug_macro
 *(.debug_macro)
OUTPUT(SDrive.elf elf32-avr)
LOAD linker stubs
